--Query nyari OSID,Status,Duration
ALTER SESSION SET NLS_DATE_FORMAT='DD-Mon-RR HH24:MI:SS';
SELECT SPID,SID||','||VS.SERIAL# SIDSERIAL,VS.USERNAME,STATUS,OSUSER,MACHINE,VS.PROGRAM,SQL_ID,MODULE,ROUND(LAST_CALL_ET/60)DURATION_MINUTES,LOGON_TIME
FROM V$SESSION VS JOIN V$PROCESS VP ON VS.PADDR=VP.ADDR
WHERE OSUSER='prastyo';

--Check session sql_id and event
ALTER SESSION SET NLS_DATE_FORMAT='DD-Mon-RR HH24:MI:SS';
COL SPID FOR A8;
COL SIDSERIAL FOR A12;
COL SCHEMANAME FOR A15;
COL OSUSER FOR A15;
COL MACHINE FOR A25;
COL EVENT FOR A35;
SELECT P.SPID, S.SID||','||S.SERIAL# SIDSERIAL, S.SQL_ID, STATUS, LOGON_TIME, SCHEMANAME, S.OSUSER, MACHINE, EVENT/*, 'ALTER SYSTEM KILL SESSION '''||SID||','||S.SERIAL#||''' IMMEDIATE;' KILLSESS*/
FROM V$SESSION S JOIN V$PROCESS P ON S.PADDR=P.ADDR
WHERE SCHEMANAME<>'SYS'
ORDER BY LOGON_TIME DESC;

--Check session Active and Inactive
SELECT STATUS, COUNT(STATUS)JML_SESSION FROM V$SESSION GROUP BY STATUS ORDER BY 1;

--Check count session per schema 
SELECT SCHEMANAME, COUNT(SCHEMANAME)JML_SESSION FROM V$SESSION GROUP BY SCHEMANAME ORDER BY 2;

--Check count session active and inactive per schema
SELECT SCHEMANAME, STATUS, COUNT(SCHEMANAME)JML_SESSION FROM V$SESSION GROUP BY SCHEMANAME, STATUS ORDER BY 1,2;

--Check session locking
ALTER SESSION SET NLS_DATE_FORMAT='DD-Mon-RR HH24:MI:SS';
COL USERNAME FOR A20;
COL OBJECT_NAME FOR A35;
COL SIDSERIAL FOR A11;
COL SPID FOR A6;
COL PROGRAM FOR A45;
COL MACHINE FOR A30;
COL PORT FOR 00000;
COL LOGON_TIME FOR A18;
COL SQL_FULLTEXT for A70;
SELECT S.USERNAME||'.'||O.OBJECT_NAME OBJECT_NAME,S.SID||','||S.SERIAL# SIDSERIAL,P.SPID,S.PROGRAM, S.MACHINE,S.PORT,S.LOGON_TIME,SQ.SQL_FULLTEXT
FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, V$PROCESS P, V$SQL SQ  WHERE L.OBJECT_ID=O.OBJECT_ID AND L.SESSION_ID=S.SID AND S.PADDR=P.ADDR AND S.SQL_ADDRESS=SQ.ADDRESS ORDER BY S.LOGON_TIME DESC;

--Generate script kill session locking
SELECT 'ALTER SYSTEM KILL SESSION '''||S.sid||','||s.serial#||''' IMMEDIATE;' SYNTAX FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, V$PROCESS P, V$SQL SQ WHERE L.OBJECT_ID = O.OBJECT_ID  AND L.SESSION_ID = S.SID AND S.PADDR = P.ADDR AND S.SQL_ADDRESS = SQ.ADDRESS ORDER BY LOGON_TIME DESC;

--Check blocking session
COL SIDSERIAL FOR A12;
COL WAIT_CLASS FOR A20;
SELECT BLOCKING_SESSION, S.SID||','||S.SERIAL# SIDSERIAL, S.SQL_ID, WAIT_CLASS, SQL_FULLTEXT FROM V$SESSION S, V$SQL Q WHERE S.SQL_ID=Q.SQL_ID AND BLOCKING_SESSION IS NOT NULL ORDER BY BLOCKING_SESSION;

--Check row lock contention
SELECT SID||','||SERIAL# SIDSERIAL, SQL_TEXT FROM V$SESSION S, V$SQL Q WHERE SID IN (SELECT SID FROM V$SESSION WHERE STATE IN ('WAITING') AND WAIT_CLASS != 'Idle' AND  EVENT='enq: TX - row lock contention' AND (Q.SQL_ID = S.SQL_ID OR Q.SQL_ID = S.PREV_SQL_ID));